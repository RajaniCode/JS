4.4 Add an Action Handler

To prepare for the poll creation, you'll need an action handler to capture the form submission.

app/routes/index.js
import Ember from 'ember';

export default Ember.Route.extend({
  
  
  model() {
    return this.get('store').newPoll();
  },

  store: Ember.inject.service()
});

app/services/store.js
import Ember from 'ember';
import Option from 'quiz/models/option';
import Poll from 'quiz/models/poll';

const polls = [
  Poll.create({
    id: '1',
    question: 'Which Poisonous Plant Are You?',
    options: [
      Option.create({ id: '1', value: 'Nightshade', votes: 1 }),
      Option.create({ id: '2', value: 'Hemlock', votes: 5 }),
      Option.create({ id: '3', value: 'Rhubarb', votes: 0 })
    ]
  }),

  Poll.create({
    id: '2',
    question: 'Which Is Your Favorite Woodland Wanderer Way?',
    options: [
      Option.create({ id: '4', value: 'Honesty', votes: 3 }),
      Option.create({ id: '5', value: 'Integrity', votes: 4 }),
      Option.create({ id: '6', value: 'Patience', votes: 2 })
    ]
  })
];

export default Ember.Service.extend({
  createPoll(poll) {
    poll.set('id', (polls.length + 1).toString());
    polls.pushObject(poll);
    return poll;
  },

  getPollById(id) {
    return this.getPolls().findBy('id', id);
  },

  getPolls() {
    return polls;
  },

  newPoll() {
    return Poll.create({
      options: [
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 })
      ]
    });
  }
});

1. Add an actions block to the index route.

Answer:
app/routes/index.js
import Ember from 'ember';

export default Ember.Route.extend({
  actions: {
    
  },
  
  model() {
    return this.get('store').newPoll();
  },

  store: Ember.inject.service()
});

app/services/store.js
import Ember from 'ember';
import Option from 'quiz/models/option';
import Poll from 'quiz/models/poll';

const polls = [
  Poll.create({
    id: '1',
    question: 'Which Poisonous Plant Are You?',
    options: [
      Option.create({ id: '1', value: 'Nightshade', votes: 1 }),
      Option.create({ id: '2', value: 'Hemlock', votes: 5 }),
      Option.create({ id: '3', value: 'Rhubarb', votes: 0 })
    ]
  }),

  Poll.create({
    id: '2',
    question: 'Which Is Your Favorite Woodland Wanderer Way?',
    options: [
      Option.create({ id: '4', value: 'Honesty', votes: 3 }),
      Option.create({ id: '5', value: 'Integrity', votes: 4 }),
      Option.create({ id: '6', value: 'Patience', votes: 2 })
    ]
  })
];

export default Ember.Service.extend({
  createPoll(poll) {
    poll.set('id', (polls.length + 1).toString());
    polls.pushObject(poll);
    return poll;
  },

  getPollById(id) {
    return this.getPolls().findBy('id', id);
  },

  getPolls() {
    return polls;
  },

  newPoll() {
    return Poll.create({
      options: [
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 })
      ]
    });
  }
});

2. Within the actions block, add a createPoll() action handler function that accepts one poll parameter and "saves" the given poll using the following code:

this.get('store').createPoll(poll);

Answer:
app/routes/index.js
import Ember from 'ember';

export default Ember.Route.extend({
  actions: {
    createPoll(poll) {
      this.get('store').createPoll(poll);
    }
  },
  
  model() {
    return this.get('store').newPoll();
  },

  store: Ember.inject.service()
});

app/services/store.js
import Ember from 'ember';
import Option from 'quiz/models/option';
import Poll from 'quiz/models/poll';

const polls = [
  Poll.create({
    id: '1',
    question: 'Which Poisonous Plant Are You?',
    options: [
      Option.create({ id: '1', value: 'Nightshade', votes: 1 }),
      Option.create({ id: '2', value: 'Hemlock', votes: 5 }),
      Option.create({ id: '3', value: 'Rhubarb', votes: 0 })
    ]
  }),

  Poll.create({
    id: '2',
    question: 'Which Is Your Favorite Woodland Wanderer Way?',
    options: [
      Option.create({ id: '4', value: 'Honesty', votes: 3 }),
      Option.create({ id: '5', value: 'Integrity', votes: 4 }),
      Option.create({ id: '6', value: 'Patience', votes: 2 })
    ]
  })
];

export default Ember.Service.extend({
  createPoll(poll) {
    poll.set('id', (polls.length + 1).toString());
    polls.pushObject(poll);
    return poll;
  },

  getPollById(id) {
    return this.getPolls().findBy('id', id);
  },

  getPolls() {
    return polls;
  },

  newPoll() {
    return Poll.create({
      options: [
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 })
      ]
    });
  }
});

3. Finally, after the poll is saved, transition the user to the "polls.poll" route from within the createPoll action handler. Don't forget to pass along the new model.

Answer:
app/routes/index.js
import Ember from 'ember';

export default Ember.Route.extend({
  actions: {
    createPoll(poll) {
      this.get('store').createPoll(poll);
      this.transitionTo('polls.poll', poll);
    }
  },
  
  model() {
    return this.get('store').newPoll();
  },

  store: Ember.inject.service()
});

app/services/store.js
import Ember from 'ember';
import Option from 'quiz/models/option';
import Poll from 'quiz/models/poll';

const polls = [
  Poll.create({
    id: '1',
    question: 'Which Poisonous Plant Are You?',
    options: [
      Option.create({ id: '1', value: 'Nightshade', votes: 1 }),
      Option.create({ id: '2', value: 'Hemlock', votes: 5 }),
      Option.create({ id: '3', value: 'Rhubarb', votes: 0 })
    ]
  }),

  Poll.create({
    id: '2',
    question: 'Which Is Your Favorite Woodland Wanderer Way?',
    options: [
      Option.create({ id: '4', value: 'Honesty', votes: 3 }),
      Option.create({ id: '5', value: 'Integrity', votes: 4 }),
      Option.create({ id: '6', value: 'Patience', votes: 2 })
    ]
  })
];

export default Ember.Service.extend({
  createPoll(poll) {
    poll.set('id', (polls.length + 1).toString());
    polls.pushObject(poll);
    return poll;
  },

  getPollById(id) {
    return this.getPolls().findBy('id', id);
  },

  getPolls() {
    return polls;
  },

  newPoll() {
    return Poll.create({
      options: [
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 }),
        Option.create({ votes: 0 })
      ]
    });
  }
});