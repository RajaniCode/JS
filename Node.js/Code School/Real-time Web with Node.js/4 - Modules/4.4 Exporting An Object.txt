4.4 Exporting An Object

The app.js code on the right side does not work. Once again we forgot to export our functions.

1. In the logger.js file, export the info function so we can use it in app.js by assigning it to the exports object.

Answer: module.exports.info = info;

logger.js

var warn = function(message) {
  console.log("Warning: " + message);
};

var info = function(message) {
  console.log("Info: " + message);
};

var error = function(message) {
  console.log("Error: " + message);
};
  
module.exports.info = info;

app.js

var logger = require('./logger');

logger.info('This is some information');
logger.warn('something bad is happening');

2. In the logger.js file, export the warn function so we can use it in app.js by assigning it to the exports object.

Answer: 

module.exports.info = info;
module.exports.warn = warn;

logger.js

var warn = function(message) {
  console.log("Warning: " + message);
};

var info = function(message) {
  console.log("Info: " + message);
};

var error = function(message) {
  console.log("Error: " + message);
};
  
module.exports.info = info;
module.exports.warn = warn;

app.js

var logger = require('./logger');

logger.info('This is some information');
logger.warn('something bad is happening');

3. In the logger.js file, export the error function so we can use it in app.js by assigning it to the exports object.

Answer: module.exports.error = error;

module.exports.info = info;
module.exports.warn = warn;
module.exports.error = error;

logger.js

var warn = function(message) {
  console.log("Warning: " + message);
};

var info = function(message) {
  console.log("Info: " + message);
};

var error = function(message) {
  console.log("Error: " + message);
};
  
module.exports.info = info;
module.exports.warn = warn;
module.exports.error = error;

app.js

var logger = require('./logger');

logger.info('This is some information');
logger.warn('something bad is happening');
