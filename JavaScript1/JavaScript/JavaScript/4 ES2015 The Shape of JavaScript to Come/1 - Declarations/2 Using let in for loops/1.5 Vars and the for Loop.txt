1.5 Vars and the for Loop


We thought we were done with our code, but this weird bug showed up. Looks like the _displayAvatar() function is receiving the wrong first argument — it keeps receiving the last element in userNames. Let’s fix that.

get-users-avatars.js

function getUsersAvatars(userNames, cb){
  var url = "/userAvatars/";
  
  for(var index in userNames){
    _fetchAvatar(endpoint + userNames[index], function(avatarUrl){
      _displayAvatar(userNames[index], avatarUrl);
    });
  }
}


1. The bug is in the index variable declaration in our for loop. Fix it by replacing var with let.

Answer:

get-users-avatars.js

function getUsersAvatars(userNames, cb){
  var url = "/userAvatars/";
  
  for(let index in userNames){
    _fetchAvatar(endpoint + userNames[index], function(avatarUrl){
      _displayAvatar(userNames[index], avatarUrl);
    });
  }
}

2. Now let’s change the url variable declaration to use let. It makes our code more consistent and there’s no reason to keep using var.

Answer:

get-users-avatars.js

function getUsersAvatars(userNames, cb){
  let url = "/userAvatars/";
  
  for(let index in userNames){
    _fetchAvatar(endpoint + userNames[index], function(avatarUrl){
      _displayAvatar(userNames[index], avatarUrl);
    });
  }
}