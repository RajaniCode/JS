2.5 Script Tags

Now we can add some client-side JavaScript by including the jquery.js and client.js files.

index.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Cities</title>
</head>
<body>
  <h1>Cities</h1>

  <ul class='city-list'></ul>
   
</body>
</html>

client.js
$(function(){

  $.get( ); 

  function appendToList(cities) {
    var list = [];
    for(var i in cities){
      list.push($('<li>', { text: cities[i] }));
    }
    $('.city-list').append(list);
  }
});


1. Within index.html, include jquery.js using a <script> tag.

Answer: <script src='jquery.js'></script>

index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Cities</title>
</head>
<body>
  <h1>Cities</h1>

  <ul class='city-list'></ul>
  <script src='jquery.js'></script>
</body>
</html>

2. Within index.html, include client.js using a <script> tag.

Answer: <script src='client.js'></script>

index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Cities</title>
</head>
<body>
  <h1>Cities</h1>

  <ul class='city-list'></ul>
  <script src='jquery.js'></script>
  <script src='client.js'></script>
</body>
</html>

3. Now in the client.js file, complete the code for the $.get function so that it calls the /cities URL path, and then runs the appendToList function.

Answer: $.get('/cities', appendToList);

client.js
$(function(){

  $.get('/cities', appendToList); 

  function appendToList(cities) {
    var list = [];
    for(var i in cities){
      list.push($('<li>', { text: cities[i] }));
    }
    $('.city-list').append(list);
  }
});
