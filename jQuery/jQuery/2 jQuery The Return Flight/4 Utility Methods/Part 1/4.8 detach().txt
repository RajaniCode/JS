4.8 detach()

Let's take a minute to make our previous code a bit more efficient. Use the .detach() method to remove the .flight-times list element from the DOM before you insert the new list items. Then, re-insert the .flight-times element back into the .flights element.

HTML

<button class="update-available-flights">Get Times</button>
<div class="flights">
  <ul class="flight-times">

  </ul>
</div>

AJAX Result

[
  {
    flightNumber: '308',
    time: 'April 3rd, 5:29pm'
  },
  {
    flightNumber: '298',
    time: 'April 3rd, 2:46am'
  },
  {
    flightNumber: '421',
    time: 'April 3rd, 3:35pm'
  }
]

application.js

$('.update-available-flights').on('click', function() {
  $.getJSON('/flights/late', function(result) {
    var flightElements = $.map(result, function(flightItem, index){
      var flightEl = $('<li>'+flightItem.flightNumber+'-'+flightItem.time+'</li>');
      return flightEl;
    });
    $('.flight-times').html(flightElements)
  });
});


Answer:

application.js

$('.update-available-flights').on('click', function() {
  $.getJSON('/flights/late', function(result) {
    var flightElements = $.map(result, function(flightItem, index){
      var flightEl = $('<li>'+flightItem.flightNumber+'-'+flightItem.time+'</li>');
      return flightEl;
    });
    $('.flight-times').detach().html(flightElements).appendTo('.flights');
  });
});