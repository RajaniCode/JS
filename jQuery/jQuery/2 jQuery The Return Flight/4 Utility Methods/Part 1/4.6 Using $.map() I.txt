4.6 Using $.map() I

Someone thought it would be a great idea to have a page which shows flights that are running late. You're going to need to use the $.map() function, lets first console.log() the data being passed to the $.map() callback to see what we're dealing with.

HTML

<button class="update-available-flights">Get Times</button>
<div class="flights">
  <ul class="flight-times">

  </ul>
</div>

AJAX Result

[
  {
    flightNumber: '308',
    time: 'April 3rd, 5:29pm'
  },
  {
    flightNumber: '298',
    time: 'April 3rd, 2:46am'
  },
  {
    flightNumber: '421',
    time: 'April 3rd, 3:35pm'
  }
]

applications.js

$('.update-available-flights').on('click', function() {
  $.getJSON('/flights/late', function(result) {
    // Your code goes here
  });
});


Answer:

applications.js

$('.update-available-flights').on('click', function() {
  $.getJSON('/flights/late', function(result) {
    // Your code goes here
    $.map(result, function(flight, i) {
      console.log(flight);
    });
  });
});

//Note
$('.update-available-flights').on('click', function() {
  $.getJSON('/flights/late', function(result) {
    // Your code goes here
    var flightElement = $.map(result, function(flight, i) {
      var flightItem = $('<ul></ul>');
      $('<h3>'+flight.flightNumber+'</h3>').appendTo(flightItem);
			$('<p>'+flight.time+'</p>').appendTo(flightItem);
      return flightItem;
    });
    $('.flight-times').html(flightElement);
  });
});