3.3 Refactoring Classes

We've gone ahead and split out your components for you, much like we did in the video. However, there are a few more pieces of code we need you to write.

app/main.ts

import { bootstrap } from '@angular/platform-browser-dynamic';
import { AppComponent } from './app.component';

bootstrap(AppComponent);

app/races.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'my-races',
  template: `
    <h2>Cash left to enter races: {{cashLeft() | currency:'USD':true}} </h2>
    <ul>
      <li *ngFor="let race of races">
        <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
        <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
        <p>{{race.about}}</p>
        <button *ngIf="!race.isRacing">Enter Race</button>
        <h3 *ngIf="race.isRacing">Already Racing</h3>
      </li>
    </ul>
    <h2>Total cost: {{totalCost() | currency:'USD':true}}</h2>
  `
})
  class RacesComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];

  totalCost() {
    let sum = 0;
    for (let race of this.races) {
      if (race.isRacing) sum += race.entryFee;
    }
    return sum;
  }

  cashLeft() {
    return this.cash - this.totalCost();
  }

} 

app/app.component.ts

import { Component } from '@angular/core';
import { RacesComponent } from './races.component';

@Component({
  selector: 'racing-app',
  template: `
    <h1>{{heading}}</h1>
    
  `
  
})
  class AppComponent {
  heading = "Ultra Racing Schedule"
}

1. Both our app.component and our races.component are missing the export keyword to allow their classes to be imported. Could you add them where they’re needed?

Answer:

app/races.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'my-races',
  template: `
    <h2>Cash left to enter races: {{cashLeft() | currency:'USD':true}} </h2>
    <ul>
      <li *ngFor="let race of races">
        <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
        <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
        <p>{{race.about}}</p>
        <button *ngIf="!race.isRacing">Enter Race</button>
        <h3 *ngIf="race.isRacing">Already Racing</h3>
      </li>
    </ul>
    <h2>Total cost: {{totalCost() | currency:'USD':true}}</h2>
  `
})
export class RacesComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];

  totalCost() {
    let sum = 0;
    for (let race of this.races) {
      if (race.isRacing) sum += race.entryFee;
    }
    return sum;
  }

  cashLeft() {
    return this.cash - this.totalCost();
  }

} 

app/app.component.ts

import { Component } from '@angular/core';
import { RacesComponent } from './races.component';

@Component({
  selector: 'racing-app',
  template: `
    <h1>{{heading}}</h1>
    
  `
  
})
export class AppComponent {
  heading = "Ultra Racing Schedule"
}

2. Great! Now, inside our app.component we need to display the RacesComponent by using the selector set in the the races.component. Add the tag right under the heading in the AppComponent.

Answer:

app/races.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'my-races',
  template: `
    <h2>Cash left to enter races: {{cashLeft() | currency:'USD':true}} </h2>
    <ul>
      <li *ngFor="let race of races">
        <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
        <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
        <p>{{race.about}}</p>
        <button *ngIf="!race.isRacing">Enter Race</button>
        <h3 *ngIf="race.isRacing">Already Racing</h3>
      </li>
    </ul>
    <h2>Total cost: {{totalCost() | currency:'USD':true}}</h2>
  `
})
export class RacesComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];

  totalCost() {
    let sum = 0;
    for (let race of this.races) {
      if (race.isRacing) sum += race.entryFee;
    }
    return sum;
  }

  cashLeft() {
    return this.cash - this.totalCost();
  }

} 

app/app.component.ts

import { Component } from '@angular/core';
import { RacesComponent } from './races.component';

@Component({
  selector: 'racing-app',
  template: `
    <h1>{{heading}}</h1>
    <my-races></my-races>
  `
})
export class AppComponent {
  heading = "Ultra Racing Schedule"
}

3. Lastly, we need to tell our AppComponent that we’re using the RacesComponent in the template. Add code within AppComponent to do this.

Answer:

app/races.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'my-races',
  template: `
    <h2>Cash left to enter races: {{cashLeft() | currency:'USD':true}} </h2>
    <ul>
      <li *ngFor="let race of races">
        <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
        <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
        <p>{{race.about}}</p>
        <button *ngIf="!race.isRacing">Enter Race</button>
        <h3 *ngIf="race.isRacing">Already Racing</h3>
      </li>
    </ul>
    <h2>Total cost: {{totalCost() | currency:'USD':true}}</h2>
  `
})
export class RacesComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];

  totalCost() {
    let sum = 0;
    for (let race of this.races) {
      if (race.isRacing) sum += race.entryFee;
    }
    return sum;
  }

  cashLeft() {
    return this.cash - this.totalCost();
  }

} 

app/app.component.ts

import { Component } from '@angular/core';
import { RacesComponent } from './races.component';

@Component({
  selector: 'racing-app',
  template: `
    <h1>{{heading}}</h1>
    <my-races></my-races>
  `,
  directives: [RacesComponent]  
})
export class AppComponent {
  heading = "Ultra Racing Schedule"
}
