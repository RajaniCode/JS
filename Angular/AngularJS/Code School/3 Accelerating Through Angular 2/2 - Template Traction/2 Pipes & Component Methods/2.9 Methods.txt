2.9 Methods

Let's do some math to display the total amount we've spent entering races, and then how much cash we have left to enter new races.

app/main.ts

import { bootstrap } from '@angular/platform-browser-dynamic';
import { Component } from '@angular/core';

@Component({
  selector: 'racing-app',
  template: `
  <h1>{{heading}}</h1>
  <ul>
    <li *ngFor="let race of races">
      <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
      <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
      <p>{{race.about}}</p>
      <button *ngIf="!race.isRacing">Enter Race</button>
      <h3 *ngIf="race.isRacing">Already Racing</h3>
    </li>
  </ul>
  <h2>Total cost: <!-- total cost --></h2>
  `
})
export class AppComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];
  // Write your function here
  

}

bootstrap(AppComponent);

1. At the bottom of our template we've added a place to display our total cost. Our total cost will be calculated by summing up the entryFee properties of ONLY the races we are racing in ( isRacing is true). Write a method named totalCost() in our AppComponent that returns this value.

Answer:

app/main.ts

import { bootstrap } from '@angular/platform-browser-dynamic';
import { Component } from '@angular/core';

@Component({
  selector: 'racing-app',
  template: `
  <h1>{{heading}}</h1>
  <ul>
    <li *ngFor="let race of races">
      <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
      <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
      <p>{{race.about}}</p>
      <button *ngIf="!race.isRacing">Enter Race</button>
      <h3 *ngIf="race.isRacing">Already Racing</h3>
    </li>
  </ul>
  <h2>Total cost: <!-- total cost --></h2>
  `
})
export class AppComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];
  // Write your function here
  totalCost() {
    let sum = 0;
    for (let race of this.races) {
        if(race.isRacing == true) {
            sum += race.entryFee;
        }
    }
    return sum;
  }
}

bootstrap(AppComponent);

# Note:

  totalCost() {
    let sum = 0;
    for (let race of this.races) {
        if(race.isRacing == true) {
            sum += race.entryFee;
        }
    }
    return sum;
  }

# Or reduce:

  totalCost() { 
    return this.races.reduce(
      (sum, curr) => sum + (curr.isRacing && curr.entryFee) , 0);
  }

# Or filter:

  totalCost() {
    return this.races.filter((r) => r.isRacing)
      .reduce((prev, curr) => prev + curr.entryFee, 0);
  }

2. Using the method we created in the first task, display the totalCost() value in the h2 element from the template that has the Total cost: label prepopulated for us.

Answer:

app/main.ts

import { bootstrap } from '@angular/platform-browser-dynamic';
import { Component } from '@angular/core';

@Component({
  selector: 'racing-app',
  template: `
  <h1>{{heading}}</h1>
  <ul>
    <li *ngFor="let race of races">
      <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
      <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
      <p>{{race.about}}</p>
      <button *ngIf="!race.isRacing">Enter Race</button>
      <h3 *ngIf="race.isRacing">Already Racing</h3>
    </li>
  </ul>
  <h2>Total cost: {{totalCost()}}</h2>
  `
})
export class AppComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];
  // Write your function here
  totalCost() {
    let sum = 0;
    for (let race of this.races) {
        if(race.isRacing == true) {
            sum += race.entryFee;
        }
    }
    return sum;
  }
}

bootstrap(AppComponent);

3. Good, but it looks like the output of our code needs to be formatted as currency. Pipe the output to the currency pipe [https://angular.io/docs/ts/latest/api/common/index/CurrencyPipe-class.html] to display the value as US dollars like entryFee.

Answer:

app/main.ts

import { bootstrap } from '@angular/platform-browser-dynamic';
import { Component } from '@angular/core';

@Component({
  selector: 'racing-app',
  template: `
  <h1>{{heading}}</h1>
  <ul>
    <li *ngFor="let race of races">
      <h2>{{race.name}} {{race.entryFee | currency:'USD':true}}</h2>
      <p>{{race.date | date:'MMM d, y, h:MM a'}}</p>
      <p>{{race.about}}</p>
      <button *ngIf="!race.isRacing">Enter Race</button>
      <h3 *ngIf="race.isRacing">Already Racing</h3>
    </li>
  </ul>
  <h2>Total cost: {{totalCost() | currency:'USD':true}}</h2>
  `
})
export class AppComponent {
  heading = "Ultra Racing Schedule"
  cash = 10000;
  races = [{
    "id": 1,
    "name": "Daytona Thunderdome",
    "date": new Date('2512-01-04T14:00:00'),
    "about": "Race through the ruins of an ancient Florida battle arena.",
    "entryFee": 3200,
    "isRacing": false
  }, {
    "id": 2,
    "name": "San Francisco Ruins",
    "date": new Date('2512-07-03T20:00:00'),
    "about": "Drift down the streets of a city almost sunk under the ocean.",
    "entryFee": 4700,
    "isRacing": true
  }, {
    "id": 3,
    "name": "New York City Skyline",
    "date": new Date('2512-07-12T21:00:00'),
    "about": "Fly between buildings in the electronic sky.",
    "entryFee": 4300,
    "isRacing": true
  }];
  // Write your function here
  totalCost() {
    let sum = 0;
    for (let race of this.races) {
        if(race.isRacing == true) {
            sum += race.entryFee;
        }
    }
    return sum;
  }
}

bootstrap(AppComponent);