4.2 Glorious Directives for Our Navigation

NoteWrangler navigation has now been broken into two parts: the children — nw-nav-item — and the parent — nw-nav.

Help the children and parent communicate by using what we have learned about $scope and link. They'll need to function as a nav should when clicked.

nw-nav.js

angular.module('NoteWrangler')
.directive('nwNav', function() {
  return {
    restrict: 'E',
    controller: function($scope) {
      
    }
  };
});

nw-nav-item.js

angular.module('NoteWrangler')
.directive('nwNavItem', function() {
  return {
    restrict: 'E',
    templateUrl: './templates/directives/nw-nav-item.html'
  };
});

1. Create a default activeNav variable on nwNav's $scope and make it default to 'Notes'.

Answer: $scope.activeNav = 'Notes';

nw-nav.js

angular.module('NoteWrangler')
.directive('nwNav', function() {
  return {
    restrict: 'E',
    controller: function($scope) {
  		$scope.activeNav = 'Notes';
    }
  };
});

2. Create a function called getActiveNav in the controller of the nw-nav directive that returns the value of $scope.activeNav variable.

Answer: 

this.getActiveNav = function(){
  return $scope.activeNav;       
};

nw-nav.js

angular.module('NoteWrangler')
.directive('nwNav', function() {
  return {
    restrict: 'E',
    controller: function($scope) {
  		$scope.activeNav = 'Notes';
      this.getActiveNav = function(){
        return $scope.activeNav;       
      };
    }
  };
});

3. Create a function called setActiveNav on the controller of the nw-nav directive that sets the value of $scope.activeNav variable.

Answer:

this.setActiveNav = function(setActiveNav){
  $scope.activeNav = setActiveNav;       
};

nw-nav.js

angular.module('NoteWrangler')
.directive('nwNav', function() {
  return {
    restrict: 'E',
    controller: function($scope) {
  		$scope.activeNav = 'Notes';
      this.getActiveNav = function(){
        return $scope.activeNav;       
      };
      this.setActiveNav = function(setActiveNav){
        $scope.activeNav = setActiveNav;       
      };
    }
  };
});

4. Return this from our controller.

Answer: return this;

nw-nav.js

angular.module('NoteWrangler')
.directive('nwNav', function() {
  return {
    restrict: 'E',
    controller: function($scope) {
  		$scope.activeNav = 'Notes';
      this.getActiveNav = function(){
        return $scope.activeNav;       
      };
      this.setActiveNav = function(setActiveNav){
        $scope.activeNav = setActiveNav;       
      };
      return this;
    }
  };
});